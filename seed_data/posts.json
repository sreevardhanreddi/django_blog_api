[
    {
        "title": "nginx wiki",
        "slug": "nginx-wiki",
        "created_on": "2019-12-14T11:35:47.214218Z",
        "updated_on": "2019-12-14",
        "user": null,
        "content": "Igor Sysoev began development of Nginx in 2002.[53][9] Originally, Nginx was developed to solve the C10k problem, and to fill the needs of multiple websites including the Rambler search engine and portal, for which it was serving 500 million requests per day by September 2008.[54]\r\n\r\nNginx Inc. was founded in July 2011 by Sysoev and Maxim Konovalov[10][55] to provide commercial products and support for the software.[56]\r\n\r\nThe company's principle place of business is San Francisco, California, while legally incorporated in British Virgin Islands.[10]\r\n\r\nIn October 2011, Nginx, Inc. raised $3 million from BV Capital, Runa Capital, and MSD Capital, Michael Dell's venture fund.[57]\r\n\r\nThe company announced commercial support options for companies using Nginx in production. Nginx offered commercial support in February 2012,[58][59] and paid Nginx Plus subscription in August 2013.[60]Support packages focus on installation, configuration, performance improvement, etc.[61] Support includes proactive notifications about major changes, security patches, updates and patches.\r\n\r\nNginx, Inc. also offers consulting services to assist customers in custom configuration or adding additional features.[62]\r\n\r\nIn October 2013, Nginx, Inc. raised a $10 million series B investment round led by New Enterprise Associates.[63] That round included previous investors, as well as Aaron Levie, CEO and founder of Box.com.[64][65] In December 2014, Nginx raised a $20 million series B1 round led by New Enterprise Associates, with participation from e.ventures (formerly BV Capital), Runa Capital, Index Ventures and Nginx's own CEO Gus Robertson.[66][67]\r\n\r\nIn October 2017, Nginx, Inc. announced general available Nginx Amplify SaaS providing monitoring and analytics capabilities for Nginx.[68]\r\n\r\nIn September 2017, Nginx announced an API management tool, NGINX Controller, which would build off of their API Gateway, NGINX Plus.[69][70]\r\n\r\nIn June 2018, Nginx, Inc. raised $43 million in Series C Funding in a round led by Goldman Sachs \"to Accelerate Application Modernization and Digital Transformation for Enterprises\".[71]\r\n\r\nOn 11 March 2019, F5 Networks acquired Nginx, Inc. for US$670 million.[72]\r\n\r\nOn 12 December 2019, it was reported that the Moscow offices of Nginx Inc. had been raided by police, and that Sysoev and Konovalov had been detained. The raid was conducted under a search warrant connected to a copyright claim over Nginx by Rambler—which asserts that it owns all rights to the code because it was written while he was an employee of the company.[73]",
        "category": {
            "name": "science and technology",
            "slug": "science-and-technology",
            "description": "science and technology",
            "is_active": true,
            "user": null,
            "id": 1
        },
        "tags": [
            {
                "name": "python",
                "slug": "python",
                "id": 1
            },
            {
                "name": "awesom stuff",
                "slug": "awesom-stuff",
                "id": 12
            }
        ],
        "status": "Draft",
        "keywords": "",
        "featured_image": null
    },
    {
        "title": "apache web server",
        "slug": "apache-web-server",
        "created_on": "2019-12-14T11:38:11.014468Z",
        "updated_on": "2019-12-14",
        "user": null,
        "content": "Instead of implementing a single architecture, Apache provides a variety of MultiProcessing Modules (MPMs), which allow it to run in either a process-based mode, a hybrid (process and thread) mode, or an event-hybrid mode, in order to better match the demands of each particular infrastructure. Choice of MPM and configuration is therefore important. Where compromises in performance must be made, Apache is designed to reduce latency and increase throughput relative to simply handling more requests, thus ensuring consistent and reliable processing of requests within reasonable time-frames.[clarification needed]\r\n\r\nFor delivering static pages, Apache 2.2 series was considered significantly slower than nginx and varnish.[36] To address this issue, the Apache developers created the Event MPM, which mixes the use of several processes and several threads per process in an asynchronous event-based loop.[37][clarification needed] This architecture as implemented in the Apache 2.4 series performs at least as well as event-based web servers, according to Jim Jagielski and other independent sources.[38][39][40] However, some independent but significantly outdated benchmarks show that it is still half as fast as nginx, e.g.[41]",
        "category": {
            "name": "science and technology",
            "slug": "science-and-technology",
            "description": "science and technology",
            "is_active": true,
            "user": null,
            "id": 1
        },
        "tags": [
            {
                "name": "django",
                "slug": "django",
                "id": 7
            },
            {
                "name": "awesom stuff",
                "slug": "awesom-stuff",
                "id": 12
            }
        ],
        "status": "Draft",
        "keywords": "",
        "featured_image": "/media/default/blogging.png"
    },
    {
        "title": "django-post",
        "slug": "django-post",
        "created_on": "2019-12-14T11:41:13.902676Z",
        "updated_on": "2019-12-14",
        "user": null,
        "content": "We're planning to iteratively work towards OpenAPI becoming the standard schema representation. This will mean that the coreapi dependency will gradually become removed, and we'll instead generate the schema directly, rather than building a CoreAPI Document object. OpenAPI has clearly become the standard for specifying Web APIs, so there's not much value any more in our schema-agnostic document model. Making this change will mean that we'll more easily be able to take advantage of the full set of OpenAPI functionality. This will also make a wider range of tooling available. We'll focus on continuing to develop the API Star library and client tool into a recommended option for generating API docs, validating API schemas, and providing a dynamic client library. There's also a huge amount of ongoing work on maturing the ASGI landscape, with the possibility that some of this work will eventually feed back into Django. There will be further work on the Uvicorn web server, as well as lots of functionality planned for the Starlette web framework, which is building a foundational set of tooling for working with ASGI.",
        "category": {
            "name": "web development",
            "slug": "web-development",
            "description": "full stack development",
            "is_active": true,
            "user": null,
            "id": 7
        },
        "tags": [
            {
                "name": "python",
                "slug": "python",
                "id": 2
            }
        ],
        "status": "Draft",
        "keywords": "",
        "featured_image": "/media/default/blogging.png"
    },
    {
        "title": "node wiki",
        "slug": "node-wiki",
        "created_on": "2019-12-14T11:42:43.895499Z",
        "updated_on": "2019-12-14",
        "user": null,
        "content": "Node.js is an open-source, cross-platform, JavaScript runtime environment that executes JavaScript code outside of a browser. Node.js lets developers use JavaScript to write command line tools and for server-side scripting—running scripts server-side to produce dynamic web page content before the page is sent to the user's web browser. Consequently, Node.js represents a "JavaScript everywhere" paradigm,[6] unifying web-application development around a single programming language, rather than different languages for server- and client-side scripts. Though .js is the standard filename extension for JavaScript code, the name "Node.js" does not refer to a particular file in this context and is merely the name of the product. Node.js has an event-driven architecture capable of asynchronous I/O. These design choices aim to optimize throughput and scalability in web applications with many input/output operations, as well as for real-time Web applications (e.g., real-time communication programs and browser games).[7] The Node.js distributed development project, governed by the Node.js Foundation,[8] is facilitated by the Linux Foundation's Collaborative Projects program.[9] Corporate users of Node.js software include GoDaddy,[10] Groupon,[11] IBM,[12] LinkedIn,[13][14] Microsoft,[15][16] Netflix,[17] PayPal,[18][19] Rakuten, SAP,[20] Voxer,[21] Walmart,[22] and Yahoo!.[23]",
        "category": {
            "name": "science and technology",
            "slug": "science-and-technology",
            "description": "science and technology",
            "is_active": true,
            "user": null,
            "id": 1
        },
        "tags": [
            {
                "name": "node",
                "slug": "node",
                "id": 15
            }
        ],
        "status": "Draft",
        "keywords": "",
        "featured_image": "/media/default/blogging.png"
    },
    {
        "title": "react wiki",
        "slug": "react-wiki",
        "created_on": "2019-12-14T11:45:18.605054Z",
        "updated_on": "2019-12-14",
        "user": null,
        "content": "To support React's concept of unidirectional data flow (which might be contrasted with AngularJS's bidirectional flow), the Flux architecture represents an alternative to the popular model-view-controller architecture. Flux features actions which are sent through a central dispatcher to a store, and changes to the store are propagated back to the view.[24] When used with React, this propagation is accomplished through component properties. Flux can be considered a variant of the observer pattern.[25] A React component under the Flux architecture should not directly modify any props passed to it, but should be passed callback functions that create actions which are sent by the dispatcher to modify the store. The action is an object whose responsibility is to describe what has taken place: for example, an action describing one user following  another might contain a user id, a target user id, and the type USER_FOLLOWED_ANOTHER_USER.[26] The stores, which can be thought of as models, can alter themselves in response to actions received from the dispatcher. This pattern is sometimes expressed as properties flow down, actions flow up. Many implementations of Flux have been created since its inception, perhaps the most well-known being Redux, which features a single store, often called a single source of truth.[27]",
        "category": {
            "name": "front end development",
            "slug": "front-end-development",
            "description": "front end development",
            "is_active": true,
            "user": null,
            "id": 8
        },
        "tags": [
            {
                "name": "react",
                "slug": "react",
                "id": 5
            }
        ],
        "status": "Draft",
        "keywords": "",
        "featured_image": "/media/default/blogging.png"
    },
    {
        "title": "dart wiki",
        "slug": "dart-wiki",
        "created_on": "2019-12-14T11:46:01.244681Z",
        "updated_on": "2019-12-14",
        "user": null,
        "content": "Dart was unveiled at the GOTO conference in Aarhus, Denmark, October 10–12, 2011.[9] The project was founded by Lars Bak and Kasper Lund.[10] Dart 1.0 was released on November 14th, 2013.[11] In August 2018, Dart 2.0 was released, with language changes including a sound type system.[12] Recently release Dart 2.6 is accompanied with a new extension dart2native. The feature extends native compilation to the Linux, MacOS, and Windows desktop platforms. Earlier developers were able to create new tools only using Android or iOS devices. Moreover, with this extension it becomes possible to compose a Dart program into self-contained executables. Thus, according to the company representatives, it’s not obligatory now to have Dart SDK installed, the self-contained executables can now start running in a few seconds. The new extension is also integrated with Flutter toolkit, thus making it possible to use the compiler on small services (backend supporting for example).[13][14]",
        "category": {
            "name": "web development",
            "slug": "web-development",
            "description": "full stack development",
            "is_active": true,
            "user": null,
            "id": 7
        },
        "tags": [
            {
                "name": "flutter",
                "slug": "flutter",
                "id": 6
            }
        ],
        "status": "Draft",
        "keywords": "",
        "featured_image": "/media/default/blogging.png"
    },
    {
        "title": "react next vs gatsby",
        "slug": "react-next-vs-gatsby",
        "created_on": "2019-12-14T11:46:43.131558Z",
        "updated_on": "2019-12-14",
        "user": null,
        "content": "Gatsby has been growing over time, and I’m glad to see it in use by a huge number of sites like marketing sites, blogs, and generated static pages. What attracted me in the first place was the smooth development experience, incredible results, and the warm community. Going a bit in-depth into its workings, the ecosystem and also discussing its potential with more developers made me think about how powerful it is — much more than I had initially presumed. This article seeks to make you see why it has gained popularity. If you’re already using it, you’ll get a better idea of the features that you could put to use for an even greater development experience. Do note that this is what works for me, and I’m sharing just my views. I’m in no way telling you that your current setup that works for you is obsolete, but just trying to share how Gatsby has been great for me.",
        "category": {
            "name": "front end development",
            "slug": "front-end-development",
            "description": "front end development",
            "is_active": true,
            "user": null,
            "id": 8
        },
        "tags": [
            {
                "name": "javascript",
                "slug": "javascript",
                "id": 2
            }
        ],
        "status": "Draft",
        "keywords": "",
        "featured_image": "/media/default/blogging.png"
    }
]